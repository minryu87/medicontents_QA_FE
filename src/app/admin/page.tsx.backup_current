'use client';

import { useEffect, useState } from 'react';
import Link from 'next/link';
import { adminApi } from '@/services/api';
import { formatDateTime } from '@/lib/utils';

// 타입 정의들
interface TaskItem {
  id: string;
  title: string;
  hospital: string;
  postId?: string;
  priority?: 'high' | 'medium' | 'low';
  dueTime?: string;
  status: string;
}

interface HospitalCard {
  id: number;
  name: string;
  department: string;
  status: 'admin_review' | 'ai_processing' | 'material_waiting' | 'scheduled' | 'monitoring';
  statusText: string;
  statusDetail: string;
  icon: string;
  urgent?: boolean;
}

interface PipelineStage {
  name: string;
  status: 'normal' | 'processing' | 'error';
  dailyCount: number;
  successRate: number;
  icon: string;
  errorMessage?: string;
}

// 메인 컴포넌트
export default function AdminDashboard() {
  const [loading, setLoading] = useState(true);

  // 업무 단계별 작업 데이터
  const [campaignPrepTasks, setCampaignPrepTasks] = useState<TaskItem[]>([]);
  const [preWorkTasks, setPreWorkTasks] = useState<TaskItem[]>([]);
  const [creationReviewTasks, setCreationReviewTasks] = useState<TaskItem[]>([]);
  const [approvalReviewTasks, setApprovalReviewTasks] = useState<TaskItem[]>([]);
  const [publishingTasks, setPublishingTasks] = useState<TaskItem[]>([]);
  const [monitoringTasks, setMonitoringTasks] = useState<TaskItem[]>([]);

  // 병원 현황 데이터
  const [hospitalCards, setHospitalCards] = useState<HospitalCard[]>([]);

  // AI 파이프라인 데이터
  const [pipelineStages, setPipelineStages] = useState<PipelineStage[]>([]);

  useEffect(() => {
    loadDashboardData();
  }, []);

  const loadDashboardData = async () => {
    try {
      setLoading(true);

      // 실제 API 호출 (아직 없으므로 Mock 데이터 사용)
      await loadMockData();

    } catch (error) {
      console.error('대시보드 데이터 로드 실패:', error);
      loadFallbackData();
    } finally {
      setLoading(false);
    }
  };

  const loadMockData = () => {
    // 캠페인 준비 작업
    setCampaignPrepTasks([
      { id: '1', title: '내이튼치과 #13회 캠페인 생성', hospital: '내이튼치과', status: 'pending' },
      { id: '2', title: '티유치과 #2회 캠페인 데이터 수집', hospital: '티유치과', status: 'pending' }
    ]);

    // 포스팅 사전 작업
    setPreWorkTasks([
      { id: '3', title: '내이튼치과 post_id: 12-12 자료 요청', hospital: '내이튼치과', postId: '12-12', status: 'pending' },
      { id: '4', title: '내이튼치과 post_id: 12-11 자료 검토', hospital: '내이튼치과', postId: '12-11', status: 'pending' },
      { id: '5', title: '내이튼치과 post_id: 12-10 어드민 가이드 생성', hospital: '내이튼치과', postId: '12-10', status: 'pending' }
    ]);

    // 포스팅 생성 검토
    setCreationReviewTasks([
      { id: '6', title: '내이튼치과 post_id: 12-09 생성 검토', hospital: '내이튼치과', postId: '12-09', status: 'pending' },
      { id: '7', title: '내이튼치과 post_id: 12-08 생성 검토', hospital: '내이튼치과', postId: '12-08', status: 'pending' },
      { id: '8', title: '내이튼치과 post_id: 12-07 생성 검토', hospital: '내이튼치과', postId: '12-07', status: 'pending' }
    ]);

    // 포스팅 승인 검토
    setApprovalReviewTasks([
      { id: '9', title: '내이튼치과 post_id: 12-06 승인 검토', hospital: '내이튼치과', postId: '12-06', status: 'pending' },
      { id: '10', title: '티유치과 post_id: 2-01 승인 검토', hospital: '티유치과', postId: '2-01', status: 'pending' }
    ]);

    // 포스팅 게시
    setPublishingTasks([
      { id: '11', title: '내이튼치과 post_id: 12-06 게시', hospital: '내이튼치과', postId: '12-06', status: 'pending' },
      { id: '12', title: '내이튼치과 post_id: 12-05 게시', hospital: '내이튼치과', postId: '12-05', status: 'pending' }
    ]);

    // 포스팅 모니터링
    setMonitoringTasks([
      { id: '13', title: '내이튼치과 post_id: 12-04 모니터링', hospital: '내이튼치과', postId: '12-04', status: 'pending' },
      { id: '14', title: '내이튼치과 post_id: 12-03 모니터링', hospital: '내이튼치과', postId: '12-03', status: 'pending' }
    ]);

    // 병원 현황 카드
    setHospitalCards([
      {
        id: 1,
        name: '서울대병원',
        department: '정형외과',
        status: 'admin_review',
        statusText: 'admin review',
        statusDetail: '긴급: 08:00',
        icon: 'fa-exclamation-triangle',
        urgent: true
      },
      {
        id: 2,
        name: '강남세브란스',
        department: '피부과',
        status: 'ai_processing',
        statusText: 'AI 처리중',
        statusDetail: '진행: 45%',
        icon: 'fa-cog'
      },
      {
        id: 3,
        name: '아산병원',
        department: '내과',
        status: 'material_waiting',
        statusText: '자료 대기',
        statusDetail: '대기: 3일',
        icon: 'fa-clock'
      },
      {
        id: 4,
        name: '삼성서울',
        department: '안과',
        status: 'scheduled',
        statusText: '게시 예정',
        statusDetail: '오늘 15:00',
        icon: 'fa-check'
      },
      {
        id: 5,
        name: '서울성모',
        department: '치과',
        status: 'monitoring',
        statusText: '모니터링',
        statusDetail: '성과 추적',
        icon: 'fa-chart-line'
      }
    ]);

    // AI 파이프라인 단계
    setPipelineStages([
      {
        name: 'DAS',
        status: 'normal',
        dailyCount: 156,
        successRate: 98,
        icon: 'fa-check'
      },
      {
        name: 'Input',
        status: 'normal',
        dailyCount: 142,
        successRate: 96,
        icon: 'fa-check'
      },
      {
        name: 'Plan',
        status: 'normal',
        dailyCount: 138,
        successRate: 94,
        icon: 'fa-check'
      },
      {
        name: 'Content',
        status: 'processing',
        dailyCount: 89,
        successRate: 91,
        icon: 'fa-cog'
      },
      {
        name: 'Eval',
        status: 'error',
        dailyCount: 45,
        successRate: 78,
        icon: 'fa-exclamation-triangle',
        errorMessage: 'API timeout (3건)'
      },
      {
        name: 'Edit',
        status: 'normal',
        dailyCount: 35,
        successRate: 85,
        icon: 'fa-check'
      }
    ]);
  };

  const loadFallbackData = () => {
    // 폴백 데이터 로드 - 현재는 Mock 데이터로 처리
    setCampaignPrepTasks([]);
    setPreWorkTasks([]);
    setCreationReviewTasks([]);
    setApprovalReviewTasks([]);
    setPublishingTasks([]);
    setMonitoringTasks([]);
    setHospitalCards([]);
    setPipelineStages([]);
  };

  const getStatusIcon = (status: HospitalCard['status']) => {
    const icons = {
      admin_review: 'fa-exclamation-triangle',
      ai_processing: 'fa-cog',
      material_waiting: 'fa-clock',
      scheduled: 'fa-check',
      monitoring: 'fa-chart-line'
    };
    return icons[status];
  };

  const getPipelineStatusColor = (status: PipelineStage['status']) => {
    const colors = {
      normal: 'bg-green-600',
      processing: 'bg-blue-600',
      error: 'bg-red-600'
    };
    return colors[status];
  };

  const TaskCard = ({ task }: { task: TaskItem }) => (
    <div className="bg-white p-2 rounded-lg border border-neutral-200">
      <p className="text-xs text-neutral-800">{task.title}</p>
      <button className="text-xs text-neutral-600 hover:text-neutral-800 mt-1">(바로가기)</button>
    </div>
  );

  const HospitalStatusCard = ({ hospital }: { hospital: HospitalCard }) => (
    <div className={`bg-white border-2 rounded-lg p-3 min-w-40 flex-shrink-0 ${
      hospital.urgent ? 'border-red-300 bg-red-50' : 'border-neutral-200'
    }`}>
      <div className="text-center">
        <h3 className="text-neutral-800 text-sm">{hospital.name}</h3>
        <p className="text-xs text-neutral-600 mb-2">{hospital.department}</p>
        <div className="w-10 h-10 bg-neutral-100 rounded-full mx-auto mb-2 flex items-center justify-center">
          <i className={`fa-solid ${hospital.icon} text-neutral-600 text-sm`}></i>
        </div>
        <p className="text-xs text-neutral-600">{hospital.statusText}</p>
        <p className={`text-xs mt-1 ${hospital.urgent ? 'text-red-600' : 'text-neutral-500'}`}>
          {hospital.statusDetail}
        </p>
      </div>
    </div>
  );

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto"></div>
          <p className="mt-4 text-gray-600">대시보드 로딩 중...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="flex h-full bg-neutral-50">
      {/* Sidebar */}
      <div className="w-64 bg-white shadow-lg flex flex-col">
        {/* Logo & Header */}
        <div className="p-4 border-b border-neutral-100">
          <div className="flex items-center justify-between">
            <h1 className="text-lg text-neutral-800">MediContents</h1>
            <button className="text-neutral-500 hover:text-neutral-700 md:hidden">
              <i className="fa-solid fa-bars"></i>
            </button>
          </div>
        </div>

        {/* Navigation Menu */}
        <nav className="flex-1 p-3 space-y-1">
          <Link href="/admin" className="flex items-center px-3 py-2 bg-neutral-50 text-neutral-600 rounded-lg cursor-pointer text-sm">
            <i className="fa-solid fa-chart-line w-4 mr-2"></i>
            <span>대시보드</span>
          </Link>
          <Link href="/admin/hospitals" className="flex items-center px-3 py-2 text-neutral-700 hover:bg-neutral-50 rounded-lg cursor-pointer text-sm">
            <i className="fa-solid fa-hospital w-4 mr-2"></i>
            <span>병원 관리</span>
          </Link>
          <Link href="/admin/campaigns" className="flex items-center px-3 py-2 text-neutral-700 hover:bg-neutral-50 rounded-lg cursor-pointer text-sm">
            <i className="fa-solid fa-calendar-alt w-4 mr-2"></i>
            <span>캠페인</span>
          </Link>
          <Link href="/admin/posts" className="flex items-center px-3 py-2 text-neutral-700 hover:bg-neutral-50 rounded-lg cursor-pointer text-sm">
            <i className="fa-solid fa-file-alt w-4 mr-2"></i>
            <span>포스팅</span>
          </Link>
          <Link href="/admin/agents" className="flex items-center px-3 py-2 text-neutral-700 hover:bg-neutral-50 rounded-lg cursor-pointer text-sm">
            <i className="fa-solid fa-robot w-4 mr-2"></i>
            <span>AI 에이전트</span>
          </Link>
          <Link href="/admin/analytics" className="flex items-center px-3 py-2 text-neutral-700 hover:bg-neutral-50 rounded-lg cursor-pointer text-sm">
            <i className="fa-solid fa-chart-bar w-4 mr-2"></i>
            <span>분석</span>
          </Link>
          <Link href="/admin/settings" className="flex items-center px-3 py-2 text-neutral-700 hover:bg-neutral-50 rounded-lg cursor-pointer text-sm">
            <i className="fa-solid fa-cog w-4 mr-2"></i>
            <span>시스템 설정</span>
          </Link>
        </nav>

        {/* Weekly Schedule Widget */}
        <div className="mx-3 mb-3 p-3 bg-neutral-50 rounded-lg">
          <h3 className="text-xs text-neutral-600 mb-2">주간 게시 현황</h3>
          <div className="flex justify-between items-end">
            {[3, 4, 2, 8, 5, 1, 1].map((height, index) => (
              <div key={index} className="text-center">
                <div
                  className="w-3 bg-neutral-600 rounded-sm mb-1"
                  style={{ height: `${height * 4}px` }}
                ></div>
                <span className="text-xs text-neutral-500">
                  {['월', '화', '수', '목', '금', '토', '일'][index]}
                </span>
              </div>
            ))}
          </div>
        </div>

        {/* User Profile */}
        <div className="p-3 border-t border-neutral-100">
          <div className="flex items-center">
            <img
              src="https://api.dicebear.com/7.x/notionists/svg?scale=200&seed=admin"
              alt="Admin"
              className="w-8 h-8 rounded-full mr-2"
            />
            <div className="flex-1">
              <div className="text-xs text-neutral-800">관리자</div>
              <div className="text-xs text-neutral-500">admin@medi.com</div>
            </div>
            <button className="text-neutral-500 hover:text-neutral-700">
              <i className="fa-solid fa-sign-out-alt text-sm"></i>
            </button>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="flex-1 overflow-y-auto">
        {/* Header */}
        <div className="bg-white border-b border-neutral-200 px-6 py-4">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-xl text-neutral-900">운영 현황</h1>
              <p className="text-neutral-600 text-sm mt-1">
                {new Date().toLocaleDateString('ko-KR', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                  weekday: 'long'
                })}
              </p>
            </div>
            <div className="flex items-center space-x-3">
              <button className="px-3 py-2 bg-neutral-600 text-white rounded-lg hover:bg-neutral-700 text-sm">
                <i className="fa-solid fa-plus mr-1"></i>
                새 캠페인
              </button>
              <button className="p-2 text-neutral-500 hover:text-neutral-700">
                <i className="fa-solid fa-bell"></i>
              </button>
            </div>
          </div>
        </div>

        {/* Alert Cards Section */}
        <div className="px-6 py-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            {/* 긴급 처리 필요 */}
            <div className="bg-white rounded-xl shadow-lg p-3">
              <div className="flex items-center justify-between mb-3">
                <h2 className="text-sm text-neutral-900">🚨 긴급 처리 필요</h2>
                <span className="text-xs text-neutral-500">실시간</span>
              </div>
              <div className="space-y-2">
                <div className="flex items-start space-x-2">
                  <div className="w-4 h-4 bg-neutral-100 rounded-full flex items-center justify-center flex-shrink-0">
                    <i className="fa-solid fa-clock text-neutral-600 text-xs"></i>
                  </div>
                  <div className="flex-1">
                    <p className="text-xs text-neutral-800">게시 지연</p>
                    <p className="text-xs text-neutral-500 mt-1">3건</p>
                  </div>
                  <button className="px-2 py-1 bg-neutral-600 text-white text-xs rounded-lg hover:bg-neutral-700">
                    처리
                  </button>
                </div>
                <div className="flex items-start space-x-2">
                  <div className="w-4 h-4 bg-neutral-100 rounded-full flex items-center justify-center flex-shrink-0">
                    <i className="fa-solid fa-exclamation-triangle text-neutral-600 text-xs"></i>
                  </div>
                  <div className="flex-1">
                    <p className="text-xs text-neutral-800">시스템 오류</p>
                    <p className="text-xs text-neutral-500 mt-1">1건</p>
                  </div>
                  <button className="px-2 py-1 bg-neutral-600 text-white text-xs rounded-lg hover:bg-neutral-700">
                    확인
                  </button>
                </div>
                <div className="flex items-start space-x-2">
                  <div className="w-4 h-4 bg-neutral-100 rounded-full flex items-center justify-center flex-shrink-0">
                    <i className="fa-solid fa-phone text-neutral-600 text-xs"></i>
                  </div>
                  <div className="flex-1">
                    <p className="text-xs text-neutral-800">병원 무응답</p>
                    <p className="text-xs text-neutral-500 mt-1">2건</p>
                  </div>
                  <button className="px-2 py-1 bg-neutral-600 text-white text-xs rounded-lg hover:bg-neutral-700">
                    연락
                  </button>
                </div>
              </div>
            </div>

            {/* 현황 모니터 */}
            <div className="bg-white rounded-xl shadow-lg p-3">
              <h2 className="text-sm text-neutral-900 mb-3">현황 모니터</h2>
              <div className="grid grid-cols-2 gap-2">
                {[
                  { icon: 'fa-bullhorn', title: '캠페인 운영', status: '정상' },
                  { icon: 'fa-edit', title: '포스팅 생성', status: '정상' },
                  { icon: 'fa-paper-plane', title: '포스팅 게시', status: '정상' },
                  { icon: 'fa-chart-line', title: '성과 모니터링', status: '정상' }
                ].map((item, index) => (
                  <div key={index} className="text-center p-2 bg-neutral-50 rounded-lg">
                    <div className="w-4 h-4 bg-neutral-600 rounded-full mx-auto mb-1 flex items-center justify-center">
                      <i className={`fa-solid ${item.icon} text-white text-xs`}></i>
                    </div>
                    <h3 className="text-xs text-neutral-800">{item.title}</h3>
                    <p className="text-xs text-neutral-600">{item.status}</p>
                  </div>
                ))}
              </div>
            </div>

            {/* 최근 활동 */}
            <div className="bg-white rounded-xl shadow-lg p-3">
              <div className="flex items-center justify-between mb-3">
                <h2 className="text-sm text-neutral-900">최근 활동</h2>
                <button className="text-neutral-600 hover:text-neutral-700 text-xs">전체보기</button>
              </div>
              <div className="space-y-2">
                {[
                  { icon: 'fa-check', text: '서울대병원 승인완료', time: '5분 전' },
                  { icon: 'fa-upload', text: '강남세브란스 게시완료', time: '12분 전' },
                  { icon: 'fa-exclamation-triangle', text: '아산병원 자료지연', time: '1시간 전' }
                ].map((activity, index) => (
                  <div key={index} className="flex items-start space-x-2">
                    <div className="w-4 h-4 bg-neutral-100 rounded-full flex items-center justify-center flex-shrink-0">
                      <i className={`fa-solid ${activity.icon} text-neutral-600 text-xs`}></i>
                    </div>
                    <div className="flex-1">
                      <p className="text-xs text-neutral-800">{activity.text}</p>
                      <p className="text-xs text-neutral-500 mt-1">{activity.time}</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* 오늘의 작업 섹션 */}
        <div className="px-6">
          <div className="bg-white rounded-xl shadow-lg p-4 mb-4">
            <h2 className="text-lg text-neutral-900 mb-3">오늘 처리할 작업</h2>
            <div className="flex space-x-4 overflow-x-auto pb-2">
              {/* 캠페인 준비 칸반 */}
              <div className="bg-neutral-50 rounded-lg p-3 min-w-48 flex-shrink-0">
                <h3 className="text-sm text-neutral-800 mb-2 text-center">캠페인 준비</h3>
                <div className="space-y-2">
                  {campaignPrepTasks.map(task => (
                    <TaskCard key={task.id} task={task} />
                  ))}
                </div>
              </div>

              {/* 포스팅 사전 작업 칸반 */}
              <div className="bg-neutral-50 rounded-lg p-3 min-w-48 flex-shrink-0">
                <h3 className="text-sm text-neutral-800 mb-2 text-center">포스팅 사전 작업</h3>
                <div className="space-y-2">
                  {preWorkTasks.map(task => (
                    <TaskCard key={task.id} task={task} />
                  ))}
                </div>
              </div>

              {/* 포스팅 생성 검토 칸반 */}
              <div className="bg-neutral-50 rounded-lg p-3 min-w-48 flex-shrink-0">
                <h3 className="text-sm text-neutral-800 mb-2 text-center">포스팅 생성 검토</h3>
                <div className="space-y-2">
                  {creationReviewTasks.map(task => (
                    <TaskCard key={task.id} task={task} />
                  ))}
                </div>
              </div>

              {/* 포스팅 승인 검토 칸반 */}
              <div className="bg-neutral-50 rounded-lg p-3 min-w-48 flex-shrink-0">
                <h3 className="text-sm text-neutral-800 mb-2 text-center">포스팅 승인 검토</h3>
                <div className="space-y-2">
                  {approvalReviewTasks.map(task => (
                    <TaskCard key={task.id} task={task} />
                  ))}
                </div>
              </div>

              {/* 포스팅 게시 칸반 */}
              <div className="bg-neutral-50 rounded-lg p-3 min-w-48 flex-shrink-0">
                <h3 className="text-sm text-neutral-800 mb-2 text-center">포스팅 게시</h3>
                <div className="space-y-2">
                  {publishingTasks.map(task => (
                    <TaskCard key={task.id} task={task} />
                  ))}
                </div>
              </div>

              {/* 포스팅 모니터링 칸반 */}
              <div className="bg-neutral-50 rounded-lg p-3 min-w-48 flex-shrink-0">
                <h3 className="text-sm text-neutral-800 mb-2 text-center">포스팅 모니터링</h3>
                <div className="space-y-2">
                  {monitoringTasks.map(task => (
                    <TaskCard key={task.id} task={task} />
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* 병원별 진행 현황 */}
        <div className="px-6">
          <div className="bg-white rounded-xl shadow-lg p-4">
            <div className="flex items-center justify-between mb-3">
              <h2 className="text-lg text-neutral-900">병원별 진행 현황</h2>
              <span className="text-neutral-600 hover:text-neutral-700 text-xs cursor-pointer">전체보기 →</span>
            </div>
            <div className="flex space-x-3 overflow-x-auto pb-2">
              {hospitalCards.map(hospital => (
                <HospitalStatusCard key={hospital.id} hospital={hospital} />
              ))}
            </div>
          </div>
        </div>

        {/* AI 파이프라인 모니터 */}
        <div className="px-6 py-4">
          <div className="bg-white rounded-xl shadow-lg p-4">
            <h2 className="text-lg text-neutral-900 mb-3">AI 파이프라인 모니터</h2>

            {/* 전체 진행률 */}
            <div className="mb-4">
              <div className="flex items-center justify-between mb-2">
                <span className="text-xs text-neutral-600">전체 진행률</span>
                <span className="text-xs text-neutral-600">45%</span>
              </div>
              <div className="w-full bg-neutral-200 rounded-full h-1">
                <div className="bg-neutral-600 h-1 rounded-full" style={{ width: '45%' }}></div>
              </div>
            </div>

            {/* 파이프라인 단계들 */}
            <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-2">
              {pipelineStages.map((stage, index) => (
                <div key={index} className="p-2 bg-neutral-50 border border-neutral-200 rounded-lg">
                  <div className="flex items-center justify-center mb-2">
                    <div className={`w-6 h-6 rounded-full flex items-center justify-center ${
                      getPipelineStatusColor(stage.status)
                    }`}>
                      <i className={`fa-solid ${stage.icon} text-white text-xs ${
                        stage.status === 'processing' ? 'fa-spin' : ''
                      }`}></i>
                    </div>
                  </div>
                  <div className="text-center">
                    <span className="text-neutral-800 text-xs block">{stage.name}</span>
                    <div className="text-xs text-neutral-500">24h: {stage.dailyCount}건</div>
                    <div className="text-xs text-neutral-500">성공률: {stage.successRate}%</div>
                    {stage.errorMessage && (
                      <div className="text-xs text-neutral-800 mt-1">{stage.errorMessage}</div>
                    )}
                    <span className={`text-xs px-1 py-0.5 rounded mt-1 inline-block ${
                      stage.status === 'normal' ? 'text-white bg-green-600' :
                      stage.status === 'processing' ? 'text-white bg-blue-600' :
                      'text-white bg-red-600'
                    }`}>
                      {stage.status === 'normal' ? '정상' :
                       stage.status === 'processing' ? '실행중' : '에러'}
                    </span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>

      {/* 시스템 성능 모니터 & 캘린더 */}
      <div className="px-6 py-4">
        <div className="grid grid-cols-2 gap-4">
          {/* 시스템 성능 모니터 */}
          <div className="bg-white rounded-xl shadow-lg p-4">
            <h2 className="text-lg text-neutral-900 mb-3">시스템 성능 모니터</h2>
            <div className="grid grid-cols-2 gap-2">
              {[
                { icon: 'fa-server', title: '서버', status: '정상' },
                { icon: 'fa-database', title: 'DB', status: '정상' },
                { icon: 'fa-memory', title: 'Redis', status: '정상' },
                { icon: 'fa-plug', title: 'API', status: '정상' }
              ].map((item, index) => (
                <div key={index} className="text-center p-2 bg-neutral-50 rounded-lg">
                  <div className="w-4 h-4 bg-neutral-600 rounded-full mx-auto mb-1 flex items-center justify-center">
                    <i className={`fa-solid ${item.icon} text-white text-xs`}></i>
                  </div>
                  <h3 className="text-xs text-neutral-800">{item.title}</h3>
                  <p className="text-xs text-neutral-600">{item.status}</p>
                </div>
              ))}
            </div>
          </div>

          {/* 캘린더 */}
          <div className="bg-white rounded-xl shadow-lg p-4">
            <h2 className="text-lg text-neutral-900 mb-3">1월 2025</h2>
            <div className="grid grid-cols-7 gap-1 mb-2">
              {['일', '월', '화', '수', '목', '금', '토'].map((day, index) => (
                <div key={index} className="text-center text-xs text-neutral-500 py-1">
                  {day}
                </div>
              ))}
            </div>
            <div className="grid grid-cols-7 gap-1">
              {/* 빈 칸들 (1일이 화요일이므로) */}
              {Array.from({ length: 2 }, (_, i) => (
                <div key={`empty-${i}`} className="text-center py-1 text-xs text-neutral-400"></div>
              ))}

              {/* 날짜들 */}
              {Array.from({ length: 31 }, (_, i) => {
                const day = i + 1;
                const hasEvent = [17, 20, 22].includes(day); // 샘플 이벤트 날짜들
                return (
                  <div
                    key={day}
                    className={`text-center py-1 text-xs text-neutral-700 relative ${
                      hasEvent ? 'font-medium' : ''
                    }`}
                  >
                    {day}
                    {hasEvent && (
                      <div className="w-1 h-1 bg-neutral-600 rounded-full mx-auto mt-1"></div>
                    )}
                  </div>
                );
              })}
            </div>
            <div className="mt-3 space-y-1">
              <div className="flex items-center text-xs">
                <div className="w-2 h-2 bg-neutral-600 rounded-full mr-2"></div>
                <span className="text-neutral-600">게시 예정일</span>
              </div>
              <div className="flex items-center text-xs">
                <div className="w-2 h-2 bg-neutral-600 rounded-full mr-2"></div>
                <span className="text-neutral-600">캠페인 종료일</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* 빠른 작업 섹션 */}
      <div className="px-6 pb-6">
        <div className="bg-white rounded-xl shadow-lg p-4">
          <h2 className="text-lg text-neutral-900 mb-3">빠른 작업</h2>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
            {[
              { icon: 'fa-plus', title: '새 캠페인' },
              { icon: 'fa-hospital', title: '병원 추가' },
              { icon: 'fa-file-alt', title: '포스트 생성' },
              { icon: 'fa-download', title: '보고서 다운로드' }
            ].map((action, index) => (
              <button
                key={index}
                className="flex flex-col items-center p-3 border-2 border-neutral-200 rounded-lg hover:border-neutral-300 hover:bg-neutral-50 transition-colors"
              >
                <div className="w-8 h-8 bg-neutral-100 rounded-lg flex items-center justify-center mb-2">
                  <i className={`fa-solid ${action.icon} text-neutral-600 text-sm`}></i>
                </div>
                <span className="text-xs text-neutral-700">{action.title}</span>
              </button>
            ))}
          </div>
        </div>
      </div>

      {/* 플로팅 채팅 버튼 */}
      <div className="fixed bottom-6 right-6">
        <button className="w-12 h-12 bg-neutral-600 text-white rounded-full shadow-lg hover:bg-neutral-700 hover:shadow-xl transition-all flex items-center justify-center">
          <i className="fa-solid fa-comment"></i>
        </button>
      </div>
    </div>
  );
}